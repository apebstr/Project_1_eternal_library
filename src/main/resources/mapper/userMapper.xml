<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	<insert id="addUser" parameterType="user.dto.UserDTO">

		{ call set_user(
		#{user_id},
		#{user_password},
		#{user_name},
		#{user_address},
		#{user_sex},
		#{user_age,jdbcType=VARCHAR}
		) }
	</insert>
	<!-- 아이디 값으로 사용자 선택 -->
	<select id="selectByUserId" parameterType="string"
		resultType="user.dto.UserDTO">
		SELECT *
		FROM user_data
		WHERE user_id =
		#{user_id,jdbcType=VARCHAR} AND user_password=#{user_password ,
		jdbcType=VARCHAR} and BIGO='0'
	</select>
	<select id="idcheck" parameterType="string" resultType="int">
		SELECT
		COUNT(user_id)
		FROM user_data
		WHERE user_id =
		#{user_id,jdbcType=VARCHAR}
		and bigo='0'
	</select>
	<select id="selectByUserIdString" parameterType="string"
		resultType="user.dto.UserDTO">
		SELECT *
		FROM user_data
		WHERE user_id =
		#{user_id,jdbcType=VARCHAR}
		and bigo='0'
	</select>
	<select id="getKeynum" parameterType="string"
		resultType="string">
		select user_keynum
		from user_data
		where
		user_id=#{user_id,jdbcType=VARCHAR}
		and bigo='0'

	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateAddress" parameterType="user.dto.UserDTO">
		UPDATE user_data
		SET
		user_address = #{user_address}
		WHERE user_id = #{user_id}
		and bigo='0'
	</update>

	<!-- 회원 정보 수정 -->
	<update id="updatePassword" parameterType="user.dto.UserDTO">
		UPDATE user_data
		SET
		user_password = #{user_password}
		WHERE user_id = #{user_id}
		and bigo='0'
	</update>

	<!-- 회원 탈퇴 -->

	<select id="checkBook" parameterType="string" resultType="int">
		select
		count(*)
		from user_booklist x , user_data y
		where x.user_keynum =
		y.user_keynum and y.user_id=#{user_id}
		and borrow_state !='반납'
	</select>

	<update id="deleteUser" parameterType="string">
		update user_data
		set bigo =
		'1'
		WHERE user_keynum = #{user_keynum}
	</update>
	<select id="pbookprint"
		resultType="admin.bookmanage.dto.BookmanageDTO">

		SELECT a.*, b.avg_rating ,b.countisbn ,c.book_keynum
		FROM
		booklist a, (SELECT isbn, AVG(star_num) AS avg_rating,
		count(star_num)
		as countisbn
		FROM book_review
		GROUP BY isbn)b , (
		SELECT book_keynum,
		COUNT(*) AS return_count
		FROM user_booklist
		WHERE borrow_state = '반납'
		GROUP BY book_keynum
		ORDER BY return_count DESC
		)c
		WHERE a.isbn =
		b.isbn(+) and a.book_keynum = c.book_keynum
	 and <![CDATA[ROWNUM <= 5]]>
	</select>

	<select id="nbookprint"
		resultType="admin.bookmanage.dto.BookmanageDTO">
		SELECT *
		FROM (
		SELECT *
		FROM BOOKLIST
		WHERE receive_date >= add_months(sysdate, -1)
		ORDER BY dbms_random.value -- 랜덤한 숫자 생성
		)
		where  <![CDATA[ROWNUM <= 6]]>

	</select>


</mapper>